      SUBROUTINE SETPREM(LUMP,LUPER)
      COMMON/SETKER/MTOT,LNTS,LNTT,RMP(48),INDSFR(330),KNTSFR(330)
     1   ,INDTOR(300),KNTTOR(300),NBATCH,LUMP1,LUPER1

      LUPER1=LUPER
      LUMP1=LUMP
      CALL BFFIBS4(LUMP1,1,MTOT,(3+48)*4,J,M,1)
      CALL BFFIBS4(LUMP1,1,INDSFR,660*4,J,M,0)
      CALL BFFIBS4(LUMP1,1,INDTOR,600*4,J,M,0)
      NBATCH=(MTOT+255)/256
      RETURN
      END



      SUBROUTINE FINDD(DEPTH,IND)
      COMMON/SETKER/DUM1(3),R(48),DUM2(1263)
      INI=1
      RS=1.E0-(DEPTH/6371.0)
   10 INI=INI+1
      IF(INI.GT.48) PAUSE 'ERROR IN FINDD'
      H=RS-R(INI-1)
      HB=RS-R(INI)
      IF(H*HB.GT.0.E0) GO TO 10
      IND=INI-1
      RETURN
      END



      SUBROUTINE GETPREM(NORD,IATYP,LORD,IR1,IFGOT)
      CHARACTER*4 CTT,CSS
      EQUIVALENCE (CTT,ITT),(CSS,ISS)
      COMMON/SETKER/MTOT,LNTS,LNTT,RMP(48),INDSFR(330),KNTSFR(330)
     1   ,INDTOR(300),KNTTOR(300),NBATCH,LUMP1,LUPER1
      COMMON/GETMOD/B(256,12),BKER(256,10),EIG1(256,4),EIG2(256,4)
      COMMON/PREMDATA/AMP(12),AKER(10),AR1(4),AR2(4),R1,R2,NO,IQ,LO


      DATA CTT,CSS/'T   ','S   '/
      DATA IBTCHL/0/,ircl/0/
      SAVE ITT,ISS,IBTCHL,ircl




      NO=NORD
      LO=LORD
      IFGOT=0
      IF(IATYP.NE.ISS) GOTO 10
      IF(NORD.GE.KNTSFR(LORD+1)) RETURN
      MDNUM=INDSFR(LORD+1)+NORD
      IQ=3
      GOTO 20

   10 IF(IATYP.NE.ITT) PAUSE ' ERROR 1 IN GETMOD '
      IF(NORD.GE.KNTTOR(LORD)) RETURN
      MDNUM=INDTOR(LORD)+NORD
      IQ=2

   20 IBATCH=(MDNUM+255)/256
      IF(IBATCH.EQ.IBTCHL.and.ircl.eq.ir1) GOTO 50

      IBTCHL=IBATCH
      DO 30 IVAR=1,3
      IRECMP=3+NBATCH*(IVAR-1)+IBATCH
   30 CALL BFFIBS4(LUMP1,1,B(1,4*(IVAR-1)+1),4*256*4,J,M,IRECMP)

      IRC1=IRECMP+NBATCH*IR1
      IRC2=NBATCH+IRC1
      CALL BFFIBS4(LUMP1,1,EIG1,4*256*4,J,M,IRC1)
      CALL BFFIBS4(LUMP1,1,EIG2,4*256*4,J,M,IRC2)
      IF(LUPER1.EQ.0) GOTO 50
      CALL BFFIBS4(LUPER1,1,BKER,10*256*4,J,M,IBATCH)

   50 IND=MDNUM-256*(IBATCH-1)
      DO 60 I=1,12
   60 AMP(I)=B(IND,I)
      DO 80 I=1,4
      AR1(I)=EIG1(IND,I)
   80 AR2(I)=EIG2(IND,I)
      IF(LUPER1.EQ.0) GOTO 90
      DO 70 I=1,10
   70 AKER(I)=BKER(IND,I)
   90 IFGOT=1
      R1=RMP(IR1)
      R2=RMP(IR1+1)
      ircl=ir1
      RETURN
      END



C     SOPREM RETURNS THE EXITATION OF NORMAL MODES IN EVEC
C     INPUT: SOUR(I),I=1,9
C            LATITUDE,LONGITUDE,DEPTH,XM(1-6)
C     OUTPUT:COMPLEX EVEC(LORD+1) WHERE LORD IS ANGULAR ORDER
C     WORKSPACES X,XP,XCOSEC HAVE TO BE DIMENSIONED (LORD+1)
C     EVEC(1) - M=0   EVEC(2) - M=1   EVEC(LORD+1) - M=LORD
C     THIS IS A SINGLE PRECISION VERSION OF EXTAN
C     EVEC(-M)=(-1)**M*CONJG(EVEC(M)

      SUBROUTINE SOPREM(SOUR,EVEC,X,XP,XCOSEC)
      COMPLEX EVEC(3),FACT,EFAC,E(6)
      DIMENSION SOUR(9),X(1),XP(1),XCOSEC(1)
      COMMON/PREMDATA/OM,QU,VAA,HAA,GVEL,ELLIP,DUM1(5),ROTSP
     1 ,DUM2(10),U,UP,V,VP,U2,U2P,V2,V2P,R1,R2,NO,IQ,L
      DATA PI,PIB2/3.141592      ,1.570796      /
      RS=1.0-SOUR(3)/6371.0
      THETA=PIB2-SOUR(1)*PI/180.E0
      PHI=SOUR(2)*PI/180.E0
      H=RS-R1
      HN=R2-R1
      RHN=1.E0/HN
      HN2=RHN*RHN
      HN3=RHN*HN2
      A=HN3*(HN*(VP+V2P)+
     1         2.E0*(V-V2))
      B=HN2*(3.E0*(V2-V)-
     1         HN*(V2P+2.D0*VP))
      VV=V+H*(VP+H*(B+H*A))
      VVP=VP+H*(2.E0*B+3.E0*H*A)
      IF(IQ.EQ.2) GOTO 20
      A=HN3*(HN*(UP+U2P)+
     1         2.E0*(U-U2))
      B=HN2*(3.E0*(U2-U)-
     1         HN*(U2P+2.E0*UP))
      UU=U+H*(UP+H*(B+H*A))
      UUP=UP+H*(2.E0*B+3.E0*H*A)

   20 B0=SQRT(FLOAT(2*L+1)/(4.E0*PI))
      B1=-.5D0*B0*SQRT(FLOAT(L*(L+1)))
      B2=0.E0
      IF(L.GT.0) B2=-.25*B1*SQRT(FLOAT((L-1)*(L+2)))
      LP1=L+1
      DO 1 I=1,LP1
    1 EVEC(I)=(0.,0.)
      ES=VVP+(UU-VV)/RS
      IF(THETA.NE.0.E0.AND.THETA.NE.PI) GOTO 100
      FACT=(1.,0.)
      IF(THETA.EQ.PI) FACT=(-1.,0.)
      IF(IQ.EQ.2) GOTO 110
      EVEC(1)=SOUR(4)*B0*UUP+(SOUR(5)+SOUR(6))
     1     *(UU-.5E0*FLOAT(L*(L+1))*VV)*B0/RS
      IF(L.EQ.0) RETURN
      EVEC(2)=FACT*ES*B1*(SOUR(7)-FACT*CMPLX(0.E0,SOUR(8)))
      IF(L.EQ.1) RETURN
      EVEC(3)=(SOUR(5)-SOUR(6))*2.E0*B2*VV/RS+SOUR(9)*
     1     FACT*CMPLX(0.E0,-4.E0*B2*VV/RS)
      RETURN

  110 IF(L.EQ.0) RETURN
      EVEC(2)=-FACT*B1*ES*(FACT*CMPLX(0.E0,SOUR(7))-SOUR(8))
      IF(L.EQ.1) RETURN
      EVEC(3)=-FACT*B2*VV*2.E0/RS*CMPLX(0.E0,SOUR(5)-SOUR(6))
     1     -4.E0*B2*VV*SOUR(9)/RS
      RETURN
  100 CALL LEGRG(THETA,L,L,X,XP,XCOSEC)
      CT=COS(THETA)
      ST=SIN(THETA)
      COSEC=1.E0/ST
      COT=CT/ST
      FL3=L*(L+1)
      FACT=(1.,0.)
      EFAC=CEXP(CMPLX(0.E0,-PHI))
      DO 11 I=1,LP1
      XM=I-1
      Y=X(I)
      YP=XP(I)
      IF(IQ.EQ.2) GOTO 21
      E(1)=UUP*Y
      E(2)=(UU*Y-VV*(COT*YP-((XM*COSEC)**2-FL3)*Y))/RS
      E(3)=(UU*Y+VV*(COT*YP-((XM*COSEC)**2)*Y))/RS
      E(4)=ES*YP
      E(5)=CMPLX(0.E0,-XM*ES*COSEC*Y)
      E(6)=CMPLX(0.E0,-2.E0*XM*VV*COSEC*(YP-COT*Y)/RS)
      GOTO 22
   21 E(1)=(0.,0.)
      E(2)=CMPLX(0.E0,-VV*XM*COSEC*(YP-COT*Y)/RS)
      E(3)=-E(2)
      E(4)=CMPLX(0.E0,-XM*COSEC*Y*ES)
      E(5)=-YP*ES
      E(6)=VV*(2.E0*COT*YP-(2.E0*((XM*COSEC)**2)-FL3)*Y)/RS
   22 DO 23 J=1,6
   23 EVEC(I)=EVEC(I)+SOUR(J+3)*E(J)
      EVEC(I)=EVEC(I)*FACT
      FACT=FACT*EFAC
   11 CONTINUE
      RETURN
      END



C     REPREM CALCULATES THE RECEIVER VECTOR REVEC
C     INPUT:  RECE(5) , LAT,LONG,VERT,N-S,E-W  (????)
C     VERT (down), North, West
C     OUTPUT: REVEC(LORD+1)  REVEC(1) - M=0 ,ETC.
C     WORKSPACES HAVE TO BE ALLOCATED TO (LORD+1)
C     REVEC(-M)=(-1)**M*(REVEC(M)

      SUBROUTINE REPREM(REC,REVEC,X,XP,XCOSEC)
      COMPLEX REVEC(1),FACT,EFAC
      DIMENSION REC(5),X(1),XCOSEC(1),XP(1)
      COMMON/PREMDATA/OM,QU,VAA,HAA,GVEL,ELLIP,DUM1(5),ROTSP
     + ,DUM2(10),U,UP,V,VP,U2,U2P,V2,V2P,R1,R2,NO,IQ,L
      DATA PI,PIB2/3.1415926     ,1.5707963     /
      THETA=PIB2-REC(1)*PI/180.E0
      PHI=REC(2)*PI/180.E0
      COSEC=1.E0/SIN(THETA)
      FACT=(1.,0.)
      EFAC=CEXP(CMPLX(0.E0,PHI))
      CALL LEGRG(THETA,L,L,X,XP,XCOSEC)
      LP1=L+1
      DO 10 I=1,LP1
      XM=I-1
      IF(IQ.EQ.2) GOTO 20
      REVEC(I)=(REC(3)*VAA*X(I)+REC(4)*HAA*XP(I)
     +       +REC(5)*CMPLX(0.E0,XM*COSEC*HAA)*X(I))*FACT
      WRITE(6,*) REC(3),VAA,X(I),REC(4),HAA,XP(I),REC(5),XM,COSEC,FACT
      GOTO 9
   20 REVEC(I)=(CMPLX(0.E0,XM*COSEC*X(I)*REC(4))
     1        -REC(5)*XP(I))*HAA*FACT
    9 FACT=FACT*EFAC
   10 CONTINUE
      RETURN
      END



C     THIS IS A SINGLE PRECISION VERSION OF LEGROT
C     WHICH CALCULATES AND ROTATES SPHERICAL HARMONICS.

      SUBROUTINE LEGRG(THETA,L,MMAX,X,XP,XC)
c     apv fix dimension from 1 to *
      DIMENSION D(3,401),X(*),XP(*),XC(*) 
      DATA PI/3.1415926         /
      CALL ROTMG(1,L,THETA,D,3,401)
      FAC=SQRT(FLOAT(2*L+1)/(4.E0*PI))
      FAC1=SQRT(FLOAT(L*(L+1)))
      NUM=MMAX+1
      DO 10 I=1,NUM
      RM=FLOAT(I-1)
      IND=L+I
      X(I)=FAC*D(2,IND)
      XP(I)=-FAC*(FAC1*D(3,IND)+RM*D(2,IND)/SIN(THETA))
   10 CONTINUE
      RETURN
      END



C     THIS IS A SINGLE PRECISION VERSION OF ROTMX2
C     WHICH ROTATES A SECOND RANK TENSOR (I THINK).

      SUBROUTINE ROTMG(NMAX,L,THETA,D,ID1,ID2)
      DIMENSION D(ID1,ID2)
      DATA BIG,SMALL,DLBIG,DLSML/1.E35,1.E-35,35.E0,-35.E0/
      DATA PI/3.1415926         /
      FLOAT(N)=N
      TH=THETA
      IF((TH.GT.PI).OR.(TH.LT.0.E0)) STOP 'ILLEGAL ARG IN ROTMX2'
      IF(L.NE.0) GOTO 350
      D(1+NMAX,1)=1.E0
      RETURN
350   ISUP=1
      IF(TH.LE.PI/2.E0) GOTO 310
      TH=PI-TH
      ISUP=-1
310   NM=2*L+1
      NMP1=NM+1
      LP1=L+1
      LM1=L-1
      LP2=L+2
      NROW=2*NMAX+1
      NMAXP1=NMAX+1
      LMN=L-NMAX
      IF(TH.NE.0.E0) GOTO 320
      DO 330 IM1CT=1,NROW
      IM1=IM1CT+LMN
      DO 330 IM2=LP1,NM
      D(IM1CT,IM2)=0.E0
      IF(IM1.EQ.IM2) D(IM1CT,IM2)=1.E0
330   CONTINUE
      GOTO 400
320   CONTINUE

C                           ZERO L.H.S. OF MATRIX

      DO 340 IM1=1,NROW
      DO 340 IM2=1,LP1
340   D(IM1,IM2)=0.E0

C                           SET UP PARAMETERS

      SHTH=SIN(0.5E0*TH)
      CHTH=COS(0.5E0*TH)
      STH=2.E0*SHTH*CHTH
      CTH=2.E0*CHTH*CHTH-1.E0
      DLOGF=ALOG10(CHTH/SHTH)
      DLOGS=ALOG10(SHTH)

C                      ITERATE FROM LAST COLUMN USING 1. AS STARTING VALUE

      DO 10 IM1CT=1,NROW
      IM1=IM1CT+LMN
      M1=IM1-LP1
      RM1=M1
      NM2=MIN0(IM1-1,NM-IM1)
      D(IM1CT,NM)=1.E0
      IF(NM2.EQ.0) GOTO 10
      DO 20 NIT=1,NM2
      M2=L-NIT
      IM2=M2+LP1
      IF(M2.NE.LM1) GOTO 70
      T1=0.E0
      GOTO 30
70    T1=-SQRT(FLOAT((IM2+1)*(L-M2-1)))*D(IM1CT,IM2+2)
30    D(IM1CT,IM2)=T1-(2.E0/STH)*(CTH*FLOAT(M2+1)-RM1)
     1    *D(IM1CT,IM2+1)
      D(IM1CT,IM2)=D(IM1CT,IM2)/SQRT(FLOAT(IM2*(L-M2)))
      TEMP=D(IM1CT,IM2)
      RMOD=ABS(TEMP)
      IF(RMOD.LT.BIG) GOTO 20
      IF(NIT.EQ.NM2) GOTO 20
      D(IM1CT,NIT+1)=DLBIG
      D(IM1CT,IM2)=D(IM1CT,IM2)/BIG
      D(IM1CT,IM2+1)=D(IM1CT,IM2+1)/BIG
20    CONTINUE
10    CONTINUE

C                              SET UP NORMALIZATION FOR RIGHTMOST COLUMN

      T1=FLOAT(2*L)*DLOGS
      IF(LMN.EQ.0) GOTO 720
      DO 710 I=1,LMN
      M1=I-L
      T1=DLOGF+0.5E0*ALOG10(FLOAT(LP1-M1)/FLOAT(L+M1))+T1
710   CONTINUE
720   D(1,1)=T1
      IF(NROW.EQ.1) GOTO 730
      DO 110 IM1CT=2,NROW
      M1=IM1CT-NMAXP1
110   D(IM1CT,1)=DLOGF+0.5E0*ALOG10(FLOAT(L-M1+1)/FLOAT(L+M1))
     1     +D(IM1CT-1,1)
730   SGN=-1.E0
      IF((LMN/2)*2.NE.LMN) SGN=1.E0

C                                       RENORMALIZE ROWS

      DO 120 IM1CT=1,NROW
      IM1=IM1CT+LMN
      SGN=-SGN
      CSUM=D(IM1CT,1)
      MULT=1
520   IF(ABS(CSUM).LT.DLBIG) GOTO 510
      MULT=MULT*2
      CSUM=0.5*CSUM
      GOTO 520
510   FAC=10.E0**CSUM
      SFAC=SMALL/FAC
      NM2=MIN0(IM1-1,NM-IM1)
      NM2P1=NM2+1
      DO 130 IM2=1,NM2P1
      IF((D(IM1CT,IM2+1).EQ.0.E0).OR.(IM2.GE.NM2)) GOTO 250
      CSUM=CSUM*FLOAT(MULT)+D(IM1CT,IM2+1)
      MULT=1
220   IF(ABS(CSUM).LT.DLBIG) GOTO 210
      MULT=MULT*2
      CSUM=0.5E0*CSUM
      GOTO 220
210   FAC=10.E0**CSUM
      SFAC=SMALL/FAC
250   IN2=NMP1-IM2
      DO 270 I=1,MULT
      TEMP=D(IM1CT,IN2)
      RMOD=ABS(TEMP)
      IF(RMOD.GT.SFAC) GOTO 260
      D(IM1CT,IN2)=0.E0
      GOTO 130
260   D(IM1CT,IN2)=D(IM1CT,IN2)*FAC
270   CONTINUE
      D(IM1CT,IN2)=SGN*D(IM1CT,IN2)
130   CONTINUE
120   CONTINUE

C                                        FILL REST OF MATRIX

400   IF(ISUP.GT.0) GOTO 410
      SGN=-1.E0
      IF((LMN/2)*2.NE.LMN) SGN=1.E0
      DO 420 IM1CT=1,NROW
      SGN=-SGN
      IM1=IM1CT+LMN
      NM2=MIN0(IM1,NMP1-IM1)
      DO 420 IN2=1,NM2
      IM2=NMP1-IN2
420   D(IM1CT,IN2)=SGN*D(IM1CT,IM2)
      DO 430 IM1CT=1,NROW
      IM1=IM1CT+LMN
      IN1=NMP1-IM1
      IN1CT=IN1-LMN
      SGN=-1.E0
      NM2=MIN0(IM1,IN1)
      DO 440 NIT=1,NM2
      SGN=-SGN
      IM2=1+NM2-NIT
      IN2=NMP1-IM2
      IM2CT=IM2-LMN
      IN2CT=IN2-LMN
      D(IN1CT,IN2)=SGN*D(IM1CT,IM2)
      IF(IN2CT.GT.NROW) GOTO 440
      D(IM2CT,IM1)=D(IN1CT,IN2)
      D(IN2CT,IN1)=D(IM1CT,IM2)
440   CONTINUE
430   CONTINUE
      RETURN
410   DO 450 IM1CT=1,NROW
      IM1=IM1CT+LMN
      IN1=NMP1-IM1
      IN1CT=IN1-LMN
      SGN=-1.E0
      NM2=MIN0(IM1,IN1)
      DO 460 NIT=1,NM2
      SGN=-SGN
      IM2=NM-NM2+NIT
      IN2=NMP1-IM2
      IM2CT=IM2-LMN
      IN2CT=IN2-LMN
      D(IN1CT,IN2)=SGN*D(IM1CT,IM2)
      IF(IM2CT.GT.NROW) GOTO 460
      D(IM2CT,IM1)=D(IN1CT,IN2)
      D(IN2CT,IN1)=D(IM1CT,IM2)
460   CONTINUE
450   CONTINUE
      RETURN
      END



      SUBROUTINE SETKR(LUMP,LUPER)
      COMMON/SETKER/MTOT,LNTS,LNTT,RMP(48),INDSFR(330),KNTSFR(330)
     1   ,INDTOR(300),KNTTOR(300),NBATCH,LUMP1,LUPER1

      LUPER1=LUPER
      LUMP1=LUMP
      CALL BFFIBS4(LUMP1,1,MTOT,(3+48)*4,J,M,1)
C     WRITE(6,11) M
C  11 FORMAT(1X,I10,' BYTES READ')
      CALL BFFIBS4(LUMP1,1,INDSFR,660*4,J,M,2)
C     WRITE(6,11) M
      CALL BFFIBS4(LUMP1,1,INDTOR,600*4,J,M,3)
C     WRITE(6,11) M
C     WRITE(6,12) INDTOR
C  12 FORMAT(14I5)
      NBATCH=(MTOT+255)/256
C     WRITE(6,1) NBATCH,MTOT
C   1 FORMAT(' FROM SETKR: NBATCH,MTOT',2I10)
      RETURN
      END



      SUBROUTINE GETKR(NORD,IATYP,LORD,AMP,AKER,IFGOT,ISKIP)
      CHARACTER*4 CTT,CSS
      EQUIVALENCE (CTT,ITT),(CSS,ISS)

      DIMENSION AMP(12),AKER(10)
      COMMON/SETKER/MTOT,LNTS,LNTT,RMP(48),INDSFR(330),KNTSFR(330)
     1   ,INDTOR(300),KNTTOR(300),NBATCH,LUMP1,LUPER1
      COMMON/GETKER/B(256,12),BKER(256,10)


      SAVE IBTCHL
      DATA IBTCHL/0/
      DATA CTT,CSS/'T   ','S   '/



      IFGOT=0
      IF(IATYP.NE.ISS) GOTO 10
      IF(NORD.GE.KNTSFR(LORD+1)) RETURN
      MDNUM=INDSFR(LORD+1)+NORD
      GOTO 20

   10 IF(IATYP.NE.ITT) PAUSE ' ERROR 1 IN GETKER '
      IF(NORD.GE.KNTTOR(LORD)) RETURN
      MDNUM=INDTOR(LORD)+NORD

   20 IBATCH=(MDNUM+255)/256
      IF(IBATCH.EQ.IBTCHL) GOTO 50

      IBTCHL=IBATCH
      DO 30 IVAR=1,3
      IRECMP=3+NBATCH*(IVAR-1)+IBATCH
   30 CALL BFFIBS4(LUMP1,1,B(1,4*(IVAR-1)+1),4*256*4,J,M,IRECMP)
      CALL BFFIBS4(LUPER1,1,BKER,10*256*4,J,M,IBATCH+ISKIP)

   50 IND=MDNUM-256*(IBATCH-1)
      DO 60 I=1,12
   60 AMP(I)=B(IND,I)
      DO 70 I=1,10
   70 AKER(I)=BKER(IND,I)
      IFGOT=1
      RETURN
      END
